{"type":"NEO_NODE_TYPE_PROGRAM","location":{"text":"let count = 0;\r\nconst id = setInterval(() => {\r\n    println(\"timeout: \" + count)\r\n    if (count == 10) {\r\n        clearInterval(id)\r\n    }\r\n    count++\r\n}, 1000)\r\nprintln(\"start\")"},"scope":{"type":"NEO_COMPILE_SCOPE_FUNCTION","variables":[{"name":{"type":"NEO_NODE_TYPE_IDENTIFIER","location":{"text":"count"},"scope":null},"type":"NEO_COMPILE_VARIABLE_LET"},{"name":{"type":"NEO_NODE_TYPE_IDENTIFIER","location":{"text":"id"},"scope":null},"type":"NEO_COMPILE_VARIABLE_CONST"}]},"interpreter":null,"directives":[],"body":[{"type":"NEO_NODE_TYPE_DECLARATION_VARIABLE","declarators":[{"type":"NEO_NODE_TYPE_VARIABLE_DECLARATOR","location":{"text":"count = 0"},"scope":null,"identifier":{"type":"NEO_NODE_TYPE_IDENTIFIER","location":{"text":"count"},"scope":null},"initialize":{"type":"NEO_NODE_TYPE_LITERAL_NULL","location":{"text":"0"},"scope":null}}],"kind":"NEO_AST_DECLARATION_LET","location":{"text":"let count = 0"},"scope":null},{"type":"NEO_NODE_TYPE_DECLARATION_VARIABLE","declarators":[{"type":"NEO_NODE_TYPE_VARIABLE_DECLARATOR","location":{"text":"id = setInterval(() => {\r\n    println(\"timeout: \" + count)\r\n    if (count == 10) {\r\n        clearInterval(id)\r\n    }\r\n    count++\r\n}, 1000)"},"scope":null,"identifier":{"type":"NEO_NODE_TYPE_IDENTIFIER","location":{"text":"id"},"scope":null},"initialize":{"type":"NEO_NODE_TYPE_EXPRESSION_CALL","location":{"text":"setInterval(() => {\r\n    println(\"timeout: \" + count)\r\n    if (count == 10) {\r\n        clearInterval(id)\r\n    }\r\n    count++\r\n}, 1000)"},"scope":null,"callee":{"type":"NEO_NODE_TYPE_IDENTIFIER","location":{"text":"setInterval"},"scope":null},"arguments":[{"type":"NEO_NODE_TYPE_EXPRESSION_ARROW_FUNCTION","location":{"text":"() => {\r\n    println(\"timeout: \" + count)\r\n    if (count == 10) {\r\n        clearInterval(id)\r\n    }\r\n    count++\r\n}"},"scope":{"type":"NEO_COMPILE_SCOPE_FUNCTION","variables":[]},"arguments":[],"body":{"type":"NEO_NODE_TYPE_FUNCTION_BODY","location":{"text":"{\r\n    println(\"timeout: \" + count)\r\n    if (count == 10) {\r\n        clearInterval(id)\r\n    }\r\n    count++\r\n}"},"scope":{"type":"NEO_COMPILE_SCOPE_BLOCK","variables":[]},"body":[{"type":"NEO_NODE_TYPE_STATEMENT_EXPRESSION","location":{"text":"println(\"timeout: \" + count)\r\n    "},"scope":null,"expression":{"type":"NEO_NODE_TYPE_EXPRESSION_CALL","location":{"text":"println(\"timeout: \" + count)"},"scope":null,"callee":{"type":"NEO_NODE_TYPE_IDENTIFIER","location":{"text":"println"},"scope":null},"arguments":[{"type":"NEO_NODE_TYPE_EXPRESSION_BINARY","location":{"text":"\"timeout: \" + count"},"scope":null,"left":{"type":"NEO_NODE_TYPE_LITERAL_STRING","location":{"text":"\"timeout: \""},"scope":null},"right":{"type":"NEO_NODE_TYPE_IDENTIFIER","location":{"text":"count"},"scope":null},"operator":"+"}]}},{"type":"NEO_NODE_TYPE_STATEMENT_FOR","location":{"text":"if (count == 10) {\r\n        clearInterval(id)\r\n    }"},"scope":null,"condition":{"type":"NEO_NODE_TYPE_EXPRESSION_BINARY","location":{"text":"count == 10"},"scope":null,"left":{"type":"NEO_NODE_TYPE_IDENTIFIER","location":{"text":"count"},"scope":null},"right":{"type":"NEO_NODE_TYPE_LITERAL_NULL","location":{"text":"10"},"scope":null},"operator":"=="},"alternate":{"type":"NEO_NODE_TYPE_STATEMENT_BLOCK","location":{"text":"{\r\n        clearInterval(id)\r\n    }"},"scope":{"type":"NEO_COMPILE_SCOPE_BLOCK","variables":[]},"body":[{"type":"NEO_NODE_TYPE_STATEMENT_EXPRESSION","location":{"text":"clearInterval(id)\r\n    "},"scope":null,"expression":{"type":"NEO_NODE_TYPE_EXPRESSION_CALL","location":{"text":"clearInterval(id)"},"scope":null,"callee":{"type":"NEO_NODE_TYPE_IDENTIFIER","location":{"text":"clearInterval"},"scope":null},"arguments":[{"type":"NEO_NODE_TYPE_IDENTIFIER","location":{"text":"id"},"scope":null}]}}]},"consequent":null},{"type":"NEO_NODE_TYPE_STATEMENT_EXPRESSION","location":{"text":"count++\r\n"},"scope":null,"expression":{"type":"NEO_NODE_TYPE_EXPRESSION_BINARY","location":{"text":"count++"},"scope":null,"left":{"type":"NEO_NODE_TYPE_IDENTIFIER","location":{"text":"count"},"scope":null},"right":null,"operator":"++"}}],"directives":[]},"closure":[{"type":"NEO_NODE_TYPE_IDENTIFIER","location":{"text":"println"},"scope":null},{"type":"NEO_NODE_TYPE_IDENTIFIER","location":{"text":"count"},"scope":null},{"type":"NEO_NODE_TYPE_IDENTIFIER","location":{"text":"clearInterval"},"scope":null},{"type":"NEO_NODE_TYPE_IDENTIFIER","location":{"text":"id"},"scope":null}],"async":false},{"type":"NEO_NODE_TYPE_LITERAL_NULL","location":{"text":"1000"},"scope":null}]}}],"kind":"NEO_AST_DECLARATION_CONST","location":{"text":"const id = setInterval(() => {\r\n    println(\"timeout: \" + count)\r\n    if (count == 10) {\r\n        clearInterval(id)\r\n    }\r\n    count++\r\n}, 1000)"},"scope":null},{"type":"NEO_NODE_TYPE_STATEMENT_EXPRESSION","location":{"text":"println(\"start\")"},"scope":null,"expression":{"type":"NEO_NODE_TYPE_EXPRESSION_CALL","location":{"text":"println(\"start\")"},"scope":null,"callee":{"type":"NEO_NODE_TYPE_IDENTIFIER","location":{"text":"println"},"scope":null},"arguments":[{"type":"NEO_NODE_TYPE_LITERAL_STRING","location":{"text":"\"start\""},"scope":null}]}}]}